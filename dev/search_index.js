var documenterSearchIndex = {"docs":
[{"location":"kmeans/#K-Means-Clustering","page":"K-Means Clustering","title":"K-Means Clustering","text":"","category":"section"},{"location":"kmeans/","page":"K-Means Clustering","title":"K-Means Clustering","text":"K-means clustering of multidimensional vector data based on L2 distances is implemented. No specialised data structures are utilised and data is expected to be stored in matrices of Floats. The methods also do not check dimensions of inputs or bounds in for loops - it is expected that users will take care to avoid mistakes. Currently the emphasis is on speed (not convenience) with a view to implement GPU versions of these methods in the future.","category":"page"},{"location":"kmeans/#Clustering-Methods","page":"K-Means Clustering","title":"Clustering Methods","text":"","category":"section"},{"location":"kmeans/","page":"K-Means Clustering","title":"K-Means Clustering","text":"kmeans\nkmeans!","category":"page"},{"location":"kmeans/#Support-Methods","page":"K-Means Clustering","title":"Support Methods","text":"","category":"section"},{"location":"kmeans/","page":"K-Means Clustering","title":"K-Means Clustering","text":"The following methods that support the kmeans algorithm implementation are also exposed to users","category":"page"},{"location":"kmeans/","page":"K-Means Clustering","title":"K-Means Clustering","text":"kmeans_init\nclosest_centre\nclosest_centre!\nmindist2cntrs","category":"page"},{"location":"distances/#Distances","page":"Distances","title":"Distances","text":"","category":"section"},{"location":"distances/","page":"Distances","title":"Distances","text":"The following distances measures are provided:","category":"page"},{"location":"distances/#Distances-induced-in-l_p-Spaces","page":"Distances","title":"Distances induced in l_p Spaces","text":"","category":"section"},{"location":"distances/","page":"Distances","title":"Distances","text":"l2dist\nsql2dist\nl1dist","category":"page"},{"location":"distances/#VectorDataUtils.l2dist","page":"Distances","title":"VectorDataUtils.l2dist","text":"l2dist(a,b)\n\nCompute the l2 distance between two real vectors a and b. The lengths of a and b must match.\n\n\n\n\n\n","category":"function"},{"location":"distances/#VectorDataUtils.sql2dist","page":"Distances","title":"VectorDataUtils.sql2dist","text":"sql2dist(a,b)\n\nCompute the square of the l2 distance between two real vectors a and b. The lengths of a and b must match.\n\n\n\n\n\n","category":"function"},{"location":"distances/#VectorDataUtils.l1dist","page":"Distances","title":"VectorDataUtils.l1dist","text":"l1dist(a,b)\n\nCompute the l1 distance between two real vectors a and b. The lengths of a and b must match.\n\n\n\n\n\n","category":"function"},{"location":"distances/#Mahalanobis-Distance","page":"Distances","title":"Mahalanobis Distance","text":"","category":"section"},{"location":"distances/","page":"Distances","title":"Distances","text":"mahaldist","category":"page"},{"location":"distances/#VectorDataUtils.mahaldist","page":"Distances","title":"VectorDataUtils.mahaldist","text":"mahaldist(x,y,A)\n\nCompute the Mahalanobis distance between two real vectors x and y given a positive semidefinite matrix A. Dimensions of x, y and A must match. Mahalanobis distance is given by sqrt((x-y)A(x-y)).\n\n\n\n\n\n","category":"function"},{"location":"utilities/#Utility-Functions","page":"Utility Functions","title":"Utility Functions","text":"","category":"section"},{"location":"utilities/","page":"Utility Functions","title":"Utility Functions","text":"Some potentially useful utility functions are provided:","category":"page"},{"location":"utilities/#Vector-Quadratic-Form","page":"Utility Functions","title":"Vector Quadratic Form","text":"","category":"section"},{"location":"utilities/","page":"Utility Functions","title":"Utility Functions","text":"xAx","category":"page"},{"location":"utilities/#VectorDataUtils.xAx","page":"Utility Functions","title":"VectorDataUtils.xAx","text":"xAx(x,A)\n\nCompute the scalar quadratic term x'Ax given a real vector x and a square matrix A. The dimensions of x and A must match.\n\n\n\n\n\n","category":"function"},{"location":"norms/#Norms-and-Inner-Products","page":"Norms and Inner Products","title":"Norms and Inner Products","text":"","category":"section"},{"location":"norms/","page":"Norms and Inner Products","title":"Norms and Inner Products","text":"The following elementary vector norms and inner products are provided:","category":"page"},{"location":"norms/#l_2-Spaces","page":"Norms and Inner Products","title":"l_2 Spaces","text":"","category":"section"},{"location":"norms/","page":"Norms and Inner Products","title":"Norms and Inner Products","text":"l2inner\nsql2norm\nl2norm","category":"page"},{"location":"norms/#VectorDataUtils.l2inner","page":"Norms and Inner Products","title":"VectorDataUtils.l2inner","text":"l2inner(a,b)\n\nComputes the inner product in the l2 vector space (dot product) between Real or Complex vectors a and b. The lenghts of a and b must match.\n\nSee also l2norm, l2dist, sql2norm, sql2dist.\n\nExample\n\na = [1,2,3]\nb = [2,0,4]\nl2inner(a,b)\n\n# output\n\n14\n\n\n\n\n\nl2inner(a)\n\nComputes the inner product in the l2 vector space (dot product) of the Real or Complex vectors a with itself. i.e., the Squared l2 norm of a. This is identical to calling sql2norm(a).\n\n\n\n\n\n","category":"function"},{"location":"norms/#VectorDataUtils.sql2norm","page":"Norms and Inner Products","title":"VectorDataUtils.sql2norm","text":"sql2norm(a)\n\nCompute the square of the l2 norm of a real valued vector a. This is identical to calling l2inner(a).\n\n\n\n\n\n","category":"function"},{"location":"norms/#VectorDataUtils.l2norm","page":"Norms and Inner Products","title":"VectorDataUtils.l2norm","text":"l2norm(a)\n\nCompute the l2 norm of a real valued vector a.\n\n\n\n\n\n","category":"function"},{"location":"norms/#Other-l_p-Spaces","page":"Norms and Inner Products","title":"Other l_p Spaces","text":"","category":"section"},{"location":"norms/","page":"Norms and Inner Products","title":"Norms and Inner Products","text":"l1norm","category":"page"},{"location":"norms/#VectorDataUtils.l1norm","page":"Norms and Inner Products","title":"VectorDataUtils.l1norm","text":"l1norm(a)\n\nCompute the l1 norm of a real valued vector a.\n\n\n\n\n\n","category":"function"},{"location":"running_stats/#Running-Mean,-Variance-and-Covariance","page":"Running Mean, Variance and Covariance","title":"Running Mean, Variance and Covariance","text":"","category":"section"},{"location":"running_stats/","page":"Running Mean, Variance and Covariance","title":"Running Mean, Variance and Covariance","text":"The following functions are provided to estimate the mean, covariance and variance along each dimension of a set of vectors. These are estimated as running statistics as per Welford, 1962.","category":"page"},{"location":"running_stats/#Running-Mean","page":"Running Mean, Variance and Covariance","title":"Running Mean","text":"","category":"section"},{"location":"running_stats/","page":"Running Mean, Variance and Covariance","title":"Running Mean, Variance and Covariance","text":"running_mean\nrunning_mean!\nupdate_running_mean!","category":"page"},{"location":"running_stats/#VectorDataUtils.running_mean","page":"Running Mean, Variance and Covariance","title":"VectorDataUtils.running_mean","text":"running_mean(x)\n\nCompute the mean of a set of vectors x.\n\nx must be a matrix of Floats, with each column of x corresponding to a vector.\n\n\n\n\n\n","category":"function"},{"location":"running_stats/#VectorDataUtils.running_mean!","page":"Running Mean, Variance and Covariance","title":"VectorDataUtils.running_mean!","text":"running_mean!(m, x)\n\nCompute (in-place) the mean, m, of a set of vectors, x.\n\nx must be a matrix of Floats, with each column of x corresponding to a vector.\nm must be a vector of Floats of appropriate length (equal to the number of rows in x).\n\n\n\n\n\n","category":"function"},{"location":"running_stats/#VectorDataUtils.update_running_mean!","page":"Running Mean, Variance and Covariance","title":"VectorDataUtils.update_running_mean!","text":"update_running_mean!(m, x, n)\n\nUpdate the mean, m, of some set of n-1 vectors to be the mean of the set of n vectors where x is the n^th vector.\n\nm and x must be vectors of equal length.\nTypically used when the mean of a part of a dataset has been previously computed and needs to be updated with a new data point (vector).\n\n\n\n\n\n","category":"function"},{"location":"running_stats/#Running-Mean-and-Variance","page":"Running Mean, Variance and Covariance","title":"Running Mean and Variance","text":"","category":"section"},{"location":"running_stats/","page":"Running Mean, Variance and Covariance","title":"Running Mean, Variance and Covariance","text":"running_meanvar\nrunning_meanvar!\nupdate_running_meanvar!","category":"page"},{"location":"running_stats/#VectorDataUtils.running_meanvar","page":"Running Mean, Variance and Covariance","title":"VectorDataUtils.running_meanvar","text":"running_meanvar(x)\n\nCompute the mean and variance along each dimension of a set of vectors, x.\n\nx must be a matrix of Floats, with each column of x corresponding to a vector.\n\n\n\n\n\n","category":"function"},{"location":"running_stats/#VectorDataUtils.running_meanvar!","page":"Running Mean, Variance and Covariance","title":"VectorDataUtils.running_meanvar!","text":"running_meanvar!(m, v, x)\n\nCompute (in-place) the mean, m, and variance along each dimension, v, of a set of vectors, x.\n\nx must be a matrix of Floats, with each column of x corresponding to a vector.\nm must be a vector of Floats of appropriate length (equal to the number of rows in x).\nv must be a vector of Floats of appropriate length (equal to the number of rows in x).\n\n\n\n\n\n","category":"function"},{"location":"running_stats/#VectorDataUtils.update_running_meanvar!","page":"Running Mean, Variance and Covariance","title":"VectorDataUtils.update_running_meanvar!","text":"update_running_meanvar!(m, v, x, n)\n\nUpdate the mean, m, and variance along each dimension, v, of some set of n-1 vectors to be the mean and variance of the set of n vectors where x is the n^th vector (for n>=3).\n\nm, v and x must be vectors of equal length.\nTypically used when the mean and variance of a part of a dataset has been previously computed and needs to be updated with a new data point (vector).\n\nnote: Note\nn must be 3 or greater. running_meanvar() or running_meanvar!() can be used to obtain an initial estimate of m and v from at least two vectors.\n\n\n\n\n\n","category":"function"},{"location":"running_stats/#Running-Mean-and-Covariance","page":"Running Mean, Variance and Covariance","title":"Running Mean and Covariance","text":"","category":"section"},{"location":"running_stats/","page":"Running Mean, Variance and Covariance","title":"Running Mean, Variance and Covariance","text":"running_meancov\nrunning_meancov!\nupdate_running_meancov!","category":"page"},{"location":"running_stats/#VectorDataUtils.running_meancov","page":"Running Mean, Variance and Covariance","title":"VectorDataUtils.running_meancov","text":"running_meancov(x)\n\nCompute the mean and covariance matrix a set of vectors, x.\n\nx must be a matrix of Floats, with each column of x corresponding to a vector.\n\n\n\n\n\n","category":"function"},{"location":"running_stats/#VectorDataUtils.running_meancov!","page":"Running Mean, Variance and Covariance","title":"VectorDataUtils.running_meancov!","text":"running_meancov!(m, C, x)\n\nCompute (in-place) the mean, m, and covariance matrix, C, of a set of vectors, x.\n\nx must be a matrix of Floats, with each column of x corresponding to a vector.\nm must be a vector of Floats of appropriate length (equal to the number of rows in x).\nC must be a square matrix of Floats of appropriate size (side equal to the number of rows in x).\n\n\n\n\n\n","category":"function"},{"location":"running_stats/#VectorDataUtils.update_running_meancov!","page":"Running Mean, Variance and Covariance","title":"VectorDataUtils.update_running_meancov!","text":"update_running_meancov!(m, C, x, n)\n\nUpdate the mean, m, and covariance, C, of some set of n-1 vectors to be the mean and variance of the set of n vectors where x is the n^th vector (for n>=3).\n\nm and x must be vectors of equal length.\nC must be a square matrix of side equal to the length of x.\nTypically used when the mean and covariance of a part of a dataset has been previously computed and needs to be updated with a new data point (vector).\n\nnote: Note\nn must be 3 or greater. running_meancov() or running_meanvcov!() can be used to obtain an initial estimate of m and v from at least two vectors.\n\n\n\n\n\n","category":"function"},{"location":"#VectorDataUtils-Documentation","page":"Home","title":"VectorDataUtils Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"VectorDataUtils.jl provides a number of basic vector data processing routines in Julia. It is intended as a support library for other Julia toolboxes and not as a standalone toolbox. Many of the included routines make use of the excellent LoopVectorization.jl to improve their runtime performance.","category":"page"},{"location":"#Note","page":"Home","title":"Note","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Most of the routines implemented in VectorDataUtils.jl do not include any form of checks on the inputs. It is the users responsibility to ensure that array sizes and element types are appropriate.","category":"page"},{"location":"#Outline","page":"Home","title":"Outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Currently VectorDataUtils.jl implements routines for:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Norms and Inner Products\nDistances\nRunning Statistics\nK-means Clustering\nUtilities","category":"page"}]
}
